import getTelegramUser from "../utils/getTelegramUser";
import { fetchPlayerByTelegramId, updatePlayer } from "../services/playerService";
import usePlayerData from "./usePlayerData";
import useMbStore from "../store/mb-store"; // —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–ª–∏–∫–æ–≤ –∏ —Ç–æ–∫–µ–Ω–æ–≤

const useUpdatePlayer = () => {
  const { setPlayer } = usePlayerData(); // –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –≤ Zustand
  const resetMbStore = useMbStore.getState(); // –º–µ—Ç–æ–¥—ã –∏–∑ mb-store

  return async (fields) => {
    const user = getTelegramUser();
    if (!user?.id) return;

    const player = await fetchPlayerByTelegramId(user.id);
    if (!player) {
      console.warn("–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω");
      return;
    }

    try {
      // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ Strapi
      await updatePlayer(player.documentId, fields);

      // üîÅ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
      const updatedPlayer = await fetchPlayerByTelegramId(user.id);
      if (updatedPlayer) setPlayer(updatedPlayer);

      // üßπ –û–±–Ω—É–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      const resetClicks = fields.clicks === 0;
      const resetTokens = fields.progress_tokens === 0;

      if (resetClicks || resetTokens) {
        useMbStore.setState({
          mbCountAll: resetClicks ? 0 : resetMbStore.mbCountAll,
          progressTokens: resetTokens ? 0 : resetMbStore.progressTokens,
        });
      }

    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞:", err.response?.data || err);
    }
  };
};

export default useUpdatePlayer;
