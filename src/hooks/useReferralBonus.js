import { useEffect, useRef } from "react";
import usePlayerStore from "../store/player-store";
import {
  fetchPlayerByTelegramId,
  fetchPlayerByInviteCode,
  updatePlayerWithFallback,
} from "../services/playerService";

const useReferralBonus = () => {
  const { player, setPlayer } = usePlayerStore();
  const hasProcessed = useRef(false);

  useEffect(() => {
    const processBonus = async () => {
      if (hasProcessed.current || !player) return;
      hasProcessed.current = true;

      try {
        // –û–±–Ω–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –∏–∑ Strapi (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
        const currentPlayer = await fetchPlayerByTelegramId(player.telegram_id);
        if (!currentPlayer) return;

        const invitedBy = currentPlayer.invited_by;
        const received = currentPlayer.referral_bonus_received;

        // üéÅ –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–º—É
        if (invitedBy && !received) {
          await updatePlayerWithFallback(currentPlayer.documentId, {
            referral_bonus_received: true,
            mbCountAll: (currentPlayer.mbCountAll || 0) + 2500,
          });
          console.log("üéâ –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–º—É –≤—ã–¥–∞–Ω");
        }

        // üéÅ –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
        if (invitedBy && !invitedBy.bonus_given) {
          await updatePlayerWithFallback(invitedBy.documentId, {
            bonus_given: true,
            mbCountAll: (invitedBy.mbCountAll || 0) + 10000,
          });
          console.log("üéÅ –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—é –≤—ã–¥–∞–Ω");
        }

        // –û–±–Ω–æ–≤–∏–º –∏–≥—Ä–æ–∫–∞ –≤ store
        const updatedPlayer = await fetchPlayerByTelegramId(player.telegram_id);
        if (updatedPlayer) {
          setPlayer(updatedPlayer);
        }
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –±–æ–Ω—É—Å–æ–≤:", err);
      }
    };

    processBonus();
  }, [player, setPlayer]);
};

export default useReferralBonus;
