import { useEffect, useRef } from "react";
import usePlayerStore from "../store/player-store";
import useMbStore from "../store/mb-store";
import {
  fetchPlayerByTelegramId,
  updatePlayerWithFallback,
} from "../services/playerService";

const useReferralBonus = () => {
  const { player, setPlayer } = usePlayerStore();
  const { setMbCountAll, mbCountAll } = useMbStore();
  const hasProcessed = useRef(false);

  useEffect(() => {
    const processBonus = async () => {
      if (hasProcessed.current || !player) return;
      hasProcessed.current = true;

      try {
        const freshPlayer = await fetchPlayerByTelegramId(player.telegram_id);
        if (!freshPlayer) return;

        const { documentId, invited_by, referral_bonus_given, clicks} = freshPlayer;
        let localUpdate = false;

        // üéÅ –ë–æ–Ω—É—Å –¥–ª—è –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ
        if (invited_by && !referral_bonus_given) {

          // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–ª–∞–≥ –≤ Strapi
          await updatePlayerWithFallback(documentId, {
            referral_bonus_given: true,
            clicks: clicks + 2500
          });

          // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ mbCountAll

          console.log("üéâ –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–º—É –≤—ã–¥–∞–Ω");
        }

        // üéÅ –ë–æ–Ω—É—Å –¥–ª—è –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
        if (invited_by && !invited_by.bonus_given) {
          await updatePlayerWithFallback(invited_by.documentId, {
            bonus_given: true,
          });
          setMbCountAll(mbCountAll + 2500);

          console.log("üéÅ –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—é –≤—ã–¥–∞–Ω");
        }

        if (localUpdate) {
          const updated = await fetchPlayerByTelegramId(player.telegram_id);
          if (updated) {
            setPlayer(updated);
          }
        }

      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –±–æ–Ω—É—Å–æ–≤:", err);
      }
    };

    processBonus();
  }, [player, setPlayer, setMbCountAll]);
};

export default useReferralBonus;
